import mysql from "mysql2";
import dotenv from "dotenv";


dotenv.config({ path: "./config.env" });

const pool = mysql
	.createPool({
		host: process.env.DB_HOST,
		user: process.env.DB_USER,
		password: process.env.DB_PASS,
		database: process.env.DB_NAME,
	})
.promise();

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////All of menu ////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Get All Menu

export const getAllmenu = async (mAm) => {
    const [result] = await pool.query(
        `
      SELECT * FROM menu 
      `);
      const rows = result[mAm];
      return rows; 
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// create menu 

export const saveMenu = async (sMen) => {
	const result = await pool.query(
		`
        INSERT INTO menu(id, item_name, quantity, description, img)
         VALUES(?, ?, ?, ?, ?) 
    `,
		[sMen.id, sMen.item_name, sMen.quantity, sMen.description, sMen.img]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Update Menu

export const updateMenu = async (uMen) => {
	const result = await pool.query(
		`
        UPDATE menu SET item_name = ?, quantity = ?, description  = ?, img = ?
        WHERE id = ?
    `,
		[uMen.item_name, uMen.quantity, uMen.description, uRes.uMen]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Delete menu

export const deleteMenu = async (dMen) => {
	const [row] = await pool.query(
		`
        DELETE FROM menu
        WHERE id=?
    `,
		[dMen]
	);
	return row;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//get single Menu 

export const getSingledmenu = async (aID) => {
	const result = await pool.query(
		`
        SELECT * FROM drinks WHERE id = ?
    `,
		[aID]
	);
	const rows = result[0];
	return rows;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////All of Drinks //////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Get all Drinks 

export const getAlldrinks = async (dRi) => {
    const [result] = await pool.query(
        `
      SELECT * FROM drinks
      `);
      const rows = result[dRi];
      return rows; 
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Create Drinks

export const saveDrinks = async (sDri) => {
	const result = await pool.query(
		`
        INSERT INTO menu(id, beverage, quantity, description, img)
         VALUES(?, ?, ?, ?, ?) 
    `,
		[sDri.id, sDri.beverage, sDri.quantity, sDri.description, sDri.img]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Update Drinks

export const updateDrinks = async (uDri) => {
	const result = await pool.query(
		`
        UPDATE drinks SET beverage = ?, quantity = ?, description  = ?, img = ?
        WHERE id = ?
    `,
		[uDri.beverage, uDri.quantity, uDri.description, uDri.img]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Delete Drinks

export const deleteDrinks = async (dDri) => {
	const [row] = await pool.query(
		`
        DELETE FROM drinks
        WHERE id=?
    `,
		[dDri]
	);
	return row;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Get single drink

export const getSingledrink = async (aID) => {
	const result = await pool.query(
		`
        SELECT * FROM drinks WHERE id = ?
    `,
		[aID]
	);
	const rows = result[0];
	return rows;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////All of User ////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Get All Users

export const getAlluser = async (uSe) => {
    const [result] = await pool.query(
        `
      SELECT * FROM user
      `);
      const rows = result[uSe];
      return rows; 
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Create User

export const saveUser = async (sUse) => {
	const result = await pool.query(
		`
        INSERT INTO user(id, first_name, last_name, email, location, phone_num, trn, roles, password)
         VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?) 
    `,
		[sUse.id, sUse.first_name, sUse.last_name, sUse.email, sUse.location, sUse.phone_num, sUse.trn, sUse.roles, sUse.password,]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Update User

export const updateUser = async (uUse) => {
	const result = await pool.query(
		`
        UPDATE user SET first_name = ?, last_name = ?, email  = ?, location = ?, phone_num = ?, trn = ?, roles = ?, password = ?
        WHERE id = ?
    `,
		[uUse.first_name, uUse.last_name, uUse.email, uUse.location, uUse.phone_num, uUse.trn, uUse.roles, uUse.password,]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Delete User


export const deleteUser = async (dUse) => {
	const [row] = await pool.query(
		`
        DELETE FROM user
        WHERE id=?
    `,
		[dUse]
	);
	return row;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Get single user

export const getSingleuser = async (aID) => {
	const result = await pool.query(
		`
        SELECT * FROM menu WHERE id = ?
    `,
		[aID]
	);
	const rows = result[0];
	return rows;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////All of Menu Schedule ////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Get All schedule

export const getAllschedule = async (sSch) => {
	const result = await pool.query(
		`SELECT
        id,
        user_id,
        menu_id,
        drink_id,
        date
    FROM
        meals_schedule;`,
		[sSch.id, sSch.item_name, sSch.quantity, sSch.description, sSch.img, sSch.date]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





