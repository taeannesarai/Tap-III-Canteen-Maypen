import mysql from "mysql2";
import dotenv from "dotenv";


dotenv.config({ path: "./config.env" });

const pool = mysql
	.createPool({
		host: process.env.DB_HOST,
		user: process.env.DB_USER,
		password: process.env.DB_PASS,
		database: process.env.DB_NAME,
	})
.promise();

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////All of menu ////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Get All Menu

export const getAllmenu = async (mAm) => {
    const [result] = await pool.query(
        `
      SELECT * FROM menu 
      `);
      const rows = result[mAm];
      return rows; 
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Create Menu 

export const saveMenu = async (sMen) => {
	const result = await pool.query(
		`
        INSERT INTO menu(id, item_name, quantity, description, img)
         VALUES(?, ?, ?, ?, ?) 
    `,
		[sMen.id, sMen.item_name, sMen.quantity, sMen.description, sMen.img]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Update Menu

export const updateMenu = async (uMen) => {
	const result = await pool.query(
		`
        UPDATE menu SET item_name = ?, quantity = ?, description  = ?, img = ?
        WHERE id = ?
    `,
		[uMen.item_name, uMen.quantity, uMen.description, uMen.img]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Delete Menu

export const deleteMenu = async (dMen) => {
	const [row] = await pool.query(
		`
        DELETE FROM menu
        WHERE id=?
    `,
		[dMen]
	);
	return row;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Get Single Menu 

export const getSingledmenu = async (aID) => {
	const result = await pool.query(
		`
        SELECT * FROM menu WHERE id = ?
    `,
		[aID]
	);
	const rows = result[0];
	return rows;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////All of Drinks //////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Get All Drinks 

export const getAlldrinks = async (dRi) => {
    const [result] = await pool.query(
        `
      SELECT * FROM drinks
      `);
      const rows = result[dRi];
      return rows; 
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Create Drinks

export const saveDrinks = async (sDri) => {
	const result = await pool.query(
		`
        INSERT INTO drinks(id, beverage, quantity, img, description)
         VALUES(?, ?, ?, ?, ?) 
    `,
		[sDri.id, sDri.beverage, sDri.quantity, sDri.img, sDri.description]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Update Drinks

export const updateDrinks = async (uDri) => {
	const result = await pool.query(
		`
        UPDATE drinks SET beverage = ?, quantity = ?,  img = ?, description  = ?,
        WHERE id = ?
    `,
		[uDri.beverage, uDri.quantity, uDri.img, uDri.description]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Delete Drinks

export const deleteDrinks = async (dDri) => {
	const [row] = await pool.query(
		`
        DELETE FROM drinks
        WHERE id=?
    `,
		[dDri]
	);
	return row;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Get Single Drink

export const getSingledrink = async (aID) => {
	const result = await pool.query(
		`
        SELECT * FROM drinks WHERE id = ?
    `,
		[aID]
	);
	const rows = result[0];
	return rows;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////All of User ////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Get All Users

export const getAlluser = async (uSe) => {
    const [result] = await pool.query(
        `
      SELECT * FROM user
      `);
      const rows = result[uSe];
      return rows; 
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Create User

export const saveUser = async (sUse) => {
	const result = await pool.query(
		`
        INSERT INTO user(id, first_name, last_name, email, location, phone_num, trn, roles, password)
         VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?) 
    `,
		[sUse.id, sUse.first_name, sUse.last_name, sUse.email, sUse.location, sUse.phone_num, sUse.trn, sUse.roles, sUse.password]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Update User

export const updateUser = async (uUse) => {
	const result = await pool.query(
		`
        UPDATE user SET first_name = ?, last_name = ?, email  = ?, location = ?, phone_num = ?, trn = ?, roles = ?, password = ?
        WHERE id = ?
    `,
		[uUse.first_name, uUse.last_name, uUse.email, uUse.location, uUse.phone_num, uUse.trn, uUse.roles, uUse.password]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Delete User

export const deleteUser = async (dUse) => {
	const [row] = await pool.query(
		`
        DELETE FROM user
        WHERE id=?
    `,
		[dUse]
	);
	return row;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Get Single User

export const getSingleuser = async (aID) => {
	const result = await pool.query(
		`
        SELECT * FROM user WHERE id = ?
    `,
		[aID]
	);
	const rows = result[0];
	return rows;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////All of Menu Schedule ////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Get All schedule

export const getAllschedule = async (sSch) => {
	const result = await pool.query(
		`SELECT
        id,
        user_id,
        menu_id,
        drink_id,
        date
    FROM
        meals_schedule;`,
		[sSch.id, sSch.item_name, sSch.quantity, sSch.description, sSch.img, sSch.date]
	);
	return result;
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Create Schedule 

// export const saveSchedule = async (sSch) => {
// 	const result = await pool.query(
// 		`
//         INSERT INTO meals_schedule(id, user_id, menu_id, drink_id, date)
//          VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?) 
//     `,
// 		[sSch.id, sSch.user_id, sSch.menu_id, sSch.drink_id, sSch.date]
// 	);
// 	return result;
// };
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Update Schedule

// export const updateSchedule = async (uSch) => {
// 	const result = await pool.query(
// 		`
//         UPDATE meals_schedule SET user_id = ?, menu_id = ?, drink_id  = ?, date = ?
//         WHERE id = ?
//     `,
// 		[uSch.user_id, uSch.menu_id, uSch.drink_id, uSch.date]
// 	);
// 	return result;
// };
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// //Delete Schedule

// export const deleteSchedule = async (dSch) => {
// 	const [row] = await pool.query(
// 		`
//         DELETE FROM meals_schedule
//         WHERE id=?
//     `,
// 		[dSch]
// 	);
// 	return row;
// };
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Get Single Schedule

// export const getSingleschedule = async (gSs) => {
// 	const result = await pool.query(
// 		`
//         SELECT * FROM meals_schedule WHERE id = ?
//     `,
// 		[gSs]
// 	);
// 	const rows = result[0];
// 	return rows;
// };
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


